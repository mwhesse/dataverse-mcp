name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create release archive
      run: |
        mkdir -p release
        cp -r build/ release/
        cp package.json release/
        cp package-lock.json release/
        cp README.md release/
        cp LICENSE release/
        cp .env.example release/
        cd release
        tar -czf ../mcp-dataverse-${{ github.ref_name }}.tar.gz .
        cd ..
        zip -r mcp-dataverse-${{ github.ref_name }}.zip release/
        
    - name: Extract release notes
      id: extract-release-notes
      run: |
        if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "RELEASE_NOTES=Release ${{ github.ref_name }}" >> $GITHUB_OUTPUT
        else
          echo "RELEASE_NOTES=Pre-release ${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: |
          ${{ steps.extract-release-notes.outputs.RELEASE_NOTES }}
          
          ## Installation
          
          1. Download and extract the archive
          2. Run `npm install` in the extracted directory
          3. Configure your MCP settings with the path to `build/index.js`
          
          ## What's Changed
          
          See the [README](https://github.com/mwhesse/mcp-dataverse/blob/main/README.md) for full documentation.
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') || contains(github.ref, '-') }}
        
    - name: Upload tar.gz asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mcp-dataverse-${{ github.ref_name }}.tar.gz
        asset_name: mcp-dataverse-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload zip asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mcp-dataverse-${{ github.ref_name }}.zip
        asset_name: mcp-dataverse-${{ github.ref_name }}.zip
        asset_content_type: application/zip